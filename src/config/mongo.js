const mongoose = require('mongoose');

// URI –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
const uri = 'mongodb://localhost:27017/uni-store'; // –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const connectDB = async () => {
    try {
        await mongoose.connect(uri, {
            serverSelectionTimeoutMS: 5000,
        });

        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB —á–µ—Ä–µ–∑ Mongoose');

        // –ñ–¥—ë–º, –ø–æ–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è
        mongoose.connection.once('open', async () => {
            try {
                const collections = await mongoose.connection.db.listCollections().toArray();
                console.log('üìÇ –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
                collections.forEach((collection) => console.log(`- ${collection.name}`));
            } catch (err) {
                console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–π:', err);
            }
        });

    } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', err);
        throw err;
    }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Mongoose
const getDB = () => {
    if (!mongoose.connection.readyState) {
        throw new Error('‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞. –í—ã–∑–æ–≤–∏—Ç–µ connectDB() —Å–Ω–∞—á–∞–ª–∞.');
    }
    return mongoose.connection;
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞
connectDB();

module.exports = { connectDB, getDB };